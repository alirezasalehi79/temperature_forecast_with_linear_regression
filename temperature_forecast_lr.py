# -*- coding: utf-8 -*-
"""Temperature_forecast_LR.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1pSYRznnboJ_OuJhDTpiMZZUajZI7Xzrs
"""

import numpy as np
import sys
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_absolute_error
from sklearn.metrics import r2_score

worldWeather = "/content/drive/MyDrive/datasets/ww-ii-data.csv"
df = pd.read_csv(worldWeather)
df

df.describe()

"""# **In each column, non-numeric data is replaced with nan**"""

df = df.apply(lambda x: pd.to_numeric(x, errors='coerce'))
df

"""# **Filling the place of nan values ​​with the average of that column**"""

df = df.fillna(df.mean())
df

df.isnull().sum()

"""# **Columns with nan are deleted**"""

df.dropna(axis = 1,inplace = True)

df.isnull().sum()

"""# **Separation of features and targets**"""

X_1 = df.iloc[:,:3]
X_2 = df.iloc[:,4:]
X_concat = pd.concat([X_1,X_2],axis=1)
y = df.iloc[:,3]

"""# **80% of datas for train and 20% for test**"""

X_train , X_test , y_train , y_test = train_test_split(X_concat,y,test_size= 0.2,random_state=4231)

"""# **import algorithm**"""

LR = LinearRegression()
LR = LR.fit(X_train,y_train)

y_predict = LR.predict(X_test)

"""# **measuring MAE**"""

print(mean_absolute_error(y_test,y_predict))

"""# **measuring r2 score**"""

print(r2_score(y_test,y_predict))